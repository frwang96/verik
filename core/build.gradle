plugins {
    id "org.jetbrains.kotlin.jvm" version "1.3.72"
    id "org.jetbrains.kotlin.plugin.serialization" version "1.3.72"
    id "antlr"
}

group "com.verik"
version "1.0-SNAPSHOT"

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.20.0"
    implementation "com.charleskorn.kaml:kaml:0.17.0"
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.6.2"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.6.2"
    antlr "org.antlr:antlr4:4.8"
}

task copyGrammarSource(type: Copy) {
    from "src/main/antlr/com/verik/antlr"
    into "build/generated-src/antlr/main/com/verik/antlr"
}

generateGrammarSource {
    arguments += ["-package", "com.verik.antlr", "-lib", "build/generated-src/antlr/main/com/verik/antlr"]
}

generateGrammarSource.dependsOn copyGrammarSource

compileKotlin.dependsOn generateGrammarSource

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

test {
    useJUnitPlatform()
    systemProperties["junit.jupiter.execution.parallel.enabled"] = true
    systemProperties["junit.jupiter.execution.parallel.mode.default"] = "concurrent"
}

jar {
    manifest {
        attributes("Main-Class": "com.verik.core.MainKt")
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}
